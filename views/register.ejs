<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Register - Create Your Account</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  
  <style>
    :root {
      --primary-color: #2ecc71;
      --secondary-color: #27ae60;
      --error-color: #e74c3c;
      --text-color: #34495e;
      --light-bg: #f8f9fa;
      --white: #ffffff;
    }
    
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--light-bg);
      color: var(--text-color);
      min-height: 100vh;
      display: flex;
      align-items: center;
      padding: 20px;
    }
    
    .gradient-custom-3 {
      background: linear-gradient(135deg, rgba(46, 204, 113, 0.1), rgba(39, 174, 96, 0.1));
    }
    
    .gradient-custom-4 {
      background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
      transition: all 0.3s ease;
    }
    
    .gradient-custom-4:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(46, 204, 113, 0.3);
    }
    
    .card {
      border-radius: 15px;
      border: none;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      overflow: hidden;
      width: 100%;
      max-width: 600px; /* Increased max-width */
      margin: 0 auto; /* Center the card */
    }
    
    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
    }
    
    .card-body {
      padding: 3rem; /* Increased padding */
    }
    
    h2 {
      font-weight: 700;
      color: var(--primary-color);
      margin-bottom: 2rem;
      font-size: 2rem; /* Larger heading */
    }
    
    .form-outline {
      position: relative;
      margin-bottom: 1.75rem; /* Slightly more spacing */
    }
    
    .form-control {
      height: 50px;
      border-radius: 8px;
      padding: 0.75rem 1rem;
      border: 2px solid #e0e0e0;
      transition: all 0.3s ease;
      font-size: 1rem; /* Slightly larger font */
    }
    
    .form-control:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 0.2rem rgba(46, 204, 113, 0.25);
    }
    
    .form-label {
      position: absolute;
      left: 1rem;
      top: 0.75rem;
      color: #95a5a6;
      transition: all 0.3s ease;
      pointer-events: none;
      background-color: var(--white);
      padding: 0 0.5rem;
      font-size: 1rem; /* Larger label */
    }
    
    .form-control:focus + .form-label,
    .form-control:not(:placeholder-shown) + .form-label {
      top: -0.75rem;
      left: 0.8rem;
      font-size: 0.9rem; /* Slightly larger focused label */
      color: var(--primary-color);
    }
    
    .password-toggle {
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      color: #95a5a6;
      transition: color 0.3s ease;
      font-size: 1.2rem; /* Larger eye icon */
    }
    
    .password-toggle:hover {
      color: var(--primary-color);
    }
    
    .btn-block {
      padding: 0.85rem; /* Slightly larger button */
      font-weight: 600;
      letter-spacing: 0.5px;
      border-radius: 8px;
      font-size: 1.1rem; /* Larger button text */
    }
    
    .terms-link {
      color: var(--primary-color);
      text-decoration: none;
      transition: color 0.3s ease;
      font-weight: 500; /* Slightly bolder */
    }
    
    .terms-link:hover {
      color: var(--secondary-color);
      text-decoration: underline;
    }
    
    .login-link {
      color: var(--primary-color);
      font-weight: 600;
      transition: color 0.3s ease;
      font-size: 1.05rem; /* Slightly larger */
    }
    
    .login-link:hover {
      color: var(--secondary-color);
      text-decoration: none;
    }
    
    /* Password strength indicator */
    .password-strength {
      height: 6px; /* Slightly thicker */
      background-color: #e0e0e0;
      border-radius: 5px;
      margin-top: 8px; /* More spacing */
      overflow: hidden;
    }
    
    .strength-meter {
      height: 100%;
      width: 0;
      transition: width 0.3s ease, background-color 0.3s ease;
    }
    
    /* Loader styles */
    #loader {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(255, 255, 255, 0.9);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      backdrop-filter: blur(5px);
    }
    
    .spinner {
      width: 60px; /* Larger spinner */
      height: 60px;
      border: 5px solid rgba(0, 0, 0, 0.1);
      border-top-color: var(--primary-color);
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
    
    #loader-percentage-text {
      margin-top: 20px; /* More spacing */
      font-size: 1.2rem; /* Larger text */
      font-weight: bold;
      color: var(--primary-color);
    }
    
    @keyframes spin {
      to {
        transform: rotate(360deg);
      }
    }
    
    /* Validation styles */
    .is-invalid {
      border-color: var(--error-color) !important;
    }
    
    .invalid-feedback {
      color: var(--error-color);
      font-size: 0.9rem; /* Slightly larger */
      margin-top: 0.3rem; /* More spacing */
    }
    
    .is-valid {
      border-color: var(--primary-color) !important;
    }
    
    /* Responsive adjustments */
    @media (max-width: 768px) {
      .card-body {
        padding: 2.5rem;
      }
      
      h2 {
        font-size: 1.8rem;
      }
    }
    
    @media (max-width: 576px) {
      body {
        padding: 10px;
      }
      
      .card-body {
        padding: 2rem;
      }
      
      h2 {
        font-size: 1.6rem;
      }
      
      .form-control {
        height: 48px;
      }
      
      .btn-block {
        padding: 0.75rem;
      }
    }
  </style>
</head>

<body>
  <div class="container-fluid">
    <div class="row justify-content-center">
      <div class="col-12 col-lg-8 col-xl-6">
        <div class="card gradient-custom-3">
          <div class="card-body p-5">
            <h2 class="text-center mb-4 animate__animated animate__fadeInDown">Create Your Account</h2>
            
            <div id="loader" style="display: none;">
              <div class="spinner"></div>
              <p id="loader-percentage-text">Creating account... <span id="loader-percentage">0%</span></p>
            </div>
            
            <% if(messages && messages.length) {%>
              <div class="alert alert-success alert-dismissible fade show animate__animated animate__fadeIn" role="alert">
                <%= messages %>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
            <%}%>
            
            <% if(error && error.length) {%>
              <div class="alert alert-danger alert-dismissible fade show animate__animated animate__fadeIn" role="alert">
                <%= error %>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
            <%}%>
            
            <form id="registerForm" action="/register" method="POST" novalidate>
              <div class="form-outline">
                <input type="text" id="name" name="name" class="form-control" required />
                <label class="form-label" for="name">Full Name</label>
                <div class="invalid-feedback">Please enter your full name</div>
              </div>
              
              <div class="form-outline">
                <input type="email" id="email" name="email" class="form-control" required />
                <label class="form-label" for="email">Email Address</label>
                <div class="invalid-feedback">Please enter a valid email address</div>
              </div>
              
              <div class="form-outline">
                <input type="password" id="password" name="password" class="form-control" required />
                <label class="form-label" for="password">Password</label>
                <i class="bi bi-eye-slash password-toggle" id="togglePassword"></i>
                <div class="invalid-feedback">Password must be at least 8 characters</div>
                <div class="password-strength">
                  <div class="strength-meter" id="passwordStrength"></div>
                </div>
                <small class="form-text text-muted">At least 8 characters with numbers and symbols</small>
              </div>
              
              <div class="form-outline">
                <input type="password" id="password2" name="password2" class="form-control" required />
                <label class="form-label" for="password2">Confirm Password</label>
                <i class="bi bi-eye-slash password-toggle" id="togglePassword2"></i>
                <div class="invalid-feedback">Passwords don't match</div>
              </div>
              
              <div class="form-check d-flex justify-content-start mb-4">
                <input class="form-check-input me-2" type="checkbox" id="termsCheck" required />
                <label class="form-check-label" for="termsCheck">
                  I agree to the <a href="#!" class="terms-link">Terms of Service</a> and <a href="#!" class="terms-link">Privacy Policy</a>
                </label>
              </div>
              <div class="invalid-feedback mb-3" id="termsError">You must agree to the terms</div>
              
              <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-success btn-block btn-lg gradient-custom-4 text-white">
                  <span id="registerText">Register Now</span>
                  <span id="registerSpinner" class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: none;"></span>
                </button>
              </div>
              
              <p class="text-center mt-4 mb-0">Already have an account? <a href="/login" class="login-link">Sign in here</a></p>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Password toggle functionality
      const togglePassword = document.getElementById('togglePassword');
      const togglePassword2 = document.getElementById('togglePassword2');
      const passwordInput = document.getElementById('password');
      const passwordInput2 = document.getElementById('password2');
      
      togglePassword.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        this.classList.toggle('bi-eye');
        this.classList.toggle('bi-eye-slash');
      });
      
      togglePassword2.addEventListener('click', function() {
        const type = passwordInput2.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput2.setAttribute('type', type);
        this.classList.toggle('bi-eye');
        this.classList.toggle('bi-eye-slash');
      });
      
      // Password strength indicator
      passwordInput.addEventListener('input', function() {
        const strengthMeter = document.getElementById('passwordStrength');
        const password = this.value;
        let strength = 0;
        
        // Check password length
        if (password.length >= 8) strength += 1;
        if (password.length >= 12) strength += 1;
        
        // Check for numbers
        if (/\d/.test(password)) strength += 1;
        
        // Check for special characters
        if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) strength += 1;
        
        // Check for uppercase and lowercase
        if (/[a-z]/.test(password) && /[A-Z]/.test(password)) strength += 1;
        
        // Update strength meter
        let width = 0;
        let color = '#e74c3c'; // Red
        
        if (strength === 0) {
          width = 0;
        } else if (strength <= 2) {
          width = 33;
          color = '#e74c3c'; // Red
        } else if (strength === 3) {
          width = 66;
          color = '#f39c12'; // Orange
        } else {
          width = 100;
          color = '#2ecc71'; // Green
        }
        
        strengthMeter.style.width = width + '%';
        strengthMeter.style.backgroundColor = color;
      });
      
      // Form validation
      const registerForm = document.getElementById('registerForm');
      const termsCheck = document.getElementById('termsCheck');
      const termsError = document.getElementById('termsError');
      
      function validateName() {
        const nameInput = document.getElementById('name');
        if (nameInput.value.trim().length < 2) {
          nameInput.classList.add('is-invalid');
          return false;
        } else {
          nameInput.classList.remove('is-invalid');
          nameInput.classList.add('is-valid');
          return true;
        }
      }
      
      function validateEmail() {
        const emailInput = document.getElementById('email');
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        
        if (!emailRegex.test(emailInput.value)) {
          emailInput.classList.add('is-invalid');
          return false;
        } else {
          emailInput.classList.remove('is-invalid');
          emailInput.classList.add('is-valid');
          return true;
        }
      }
      
      function validatePassword() {
        const passwordInput = document.getElementById('password');
        if (passwordInput.value.length < 8) {
          passwordInput.classList.add('is-invalid');
          return false;
        } else {
          passwordInput.classList.remove('is-invalid');
          passwordInput.classList.add('is-valid');
          return true;
        }
      }
      
      function validatePasswordMatch() {
        const passwordInput = document.getElementById('password');
        const passwordInput2 = document.getElementById('password2');
        
        if (passwordInput2.value !== passwordInput.value || passwordInput2.value.length < 8) {
          passwordInput2.classList.add('is-invalid');
          return false;
        } else {
          passwordInput2.classList.remove('is-invalid');
          passwordInput2.classList.add('is-valid');
          return true;
        }
      }
      
      function validateTerms() {
        if (!termsCheck.checked) {
          termsError.style.display = 'block';
          return false;
        } else {
          termsError.style.display = 'none';
          return true;
        }
      }
      
      // Real-time validation
      document.getElementById('name').addEventListener('input', validateName);
      document.getElementById('email').addEventListener('input', validateEmail);
      document.getElementById('password').addEventListener('input', function() {
        validatePassword();
        validatePasswordMatch();
      });
      document.getElementById('password2').addEventListener('input', validatePasswordMatch);
      termsCheck.addEventListener('change', validateTerms);
      
      // Form submission
      registerForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const isNameValid = validateName();
        const isEmailValid = validateEmail();
        const isPasswordValid = validatePassword();
        const isPasswordMatchValid = validatePasswordMatch();
        const isTermsValid = validateTerms();
        
        if (isNameValid && isEmailValid && isPasswordValid && isPasswordMatchValid && isTermsValid) {
          // Show loading state on button
          const registerText = document.getElementById('registerText');
          const registerSpinner = document.getElementById('registerSpinner');
          
          registerText.textContent = 'Creating account...';
          registerSpinner.style.display = 'inline-block';
          
          // Disable button to prevent multiple submissions
          const submitButton = registerForm.querySelector('button[type="submit"]');
          submitButton.disabled = true;
          
          // Show full page loader
          showLoader();
          
          // Simulate form submission (replace with actual form submission)
          setTimeout(() => {
            registerForm.submit();
          }, 1500);
        }
      });
      
      // Loader functions
      function showLoader() {
        const loader = document.getElementById('loader');
        loader.style.display = 'flex';
        document.body.style.overflow = 'hidden';
        
        // Simulate loading progress
        let percentage = 0;
        const interval = setInterval(() => {
          percentage += 10;
          document.getElementById('loader-percentage').textContent = `${percentage}%`;
          
          if (percentage >= 100) {
            clearInterval(interval);
          }
        }, 100);
      }
      
      function hideLoader() {
        document.getElementById('loader').style.display = 'none';
        document.body.style.overflow = '';
      }
      
      // Hide loader when page is fully loaded
      window.addEventListener('load', hideLoader);
      
      // Handle navigation events
      window.addEventListener('beforeunload', showLoader);
      window.onpageshow = function(event) {
        if (event.persisted) {
          hideLoader();
        }
      };
      
      // Auto-focus name field on page load
      document.getElementById('name').focus();
    });
  </script>
</body>
</html>