below is my creating a new fiscalyear routes and make closing stock of previous fiscal year to opening stock for new fiscalyear:
router.post('/switch-fiscal-year', ensureAuthenticated, ensureCompanySelected, ensureTradeType, async (req, res) => {
    if (req.tradeType === 'Wholeseller') {
        try {
            const companyId = req.session.currentCompany;
            const { startDateEnglish, endDateEnglish, startDateNepali, endDateNepali, dateFormat } = req.body;

            let startDate, endDate;
            if (dateFormat === 'nepali') {
                startDate = startDateNepali;
                endDate = endDateNepali;
            } else if (dateFormat === 'english') {
                startDate = startDateEnglish;
                endDate = endDateEnglish;
            } else {
                return res.status(400).json({ error: 'Invalid date format' });
            }

            if (!endDate) {
                endDate = new Date(startDate);
                endDate.setFullYear(endDate.getFullYear() + 1);
                endDate.setDate(endDate.getDate() - 1);
            }

            const startDateObject = new Date(startDate);
            const endDateObject = new Date(endDate);
            const startYear = startDateObject.getFullYear();
            const endYear = endDateObject.getFullYear();
            const fiscalYearName = ${startYear}/${endYear.toString().slice(-2)};

            // Create the new fiscal year
            const newFiscalYear = await switchFiscalYear(companyId, {
                name: fiscalYearName,
                startDate: startDateObject,
                endDate: endDateObject,
                dateFormat
            });

            // Update items with the current stock as the opening stock for the new fiscal year
            const items = await Item.find({ company: companyId });

            for (let item of items) {
                const previousStock = item.stock; // Get the current stock
                const openingStockEntry = { fiscalYear: newFiscalYear._id, openingStock: previousStock };

                // Add the opening stock for the new fiscal year
                item.openingStockByFiscalYear.push(openingStockEntry);
                await item.save();
                console.log(item);

                console.log(Updated item ${item._id}: Opening stock for fiscal year ${newFiscalYear.name} set to ${previousStock});
            }

            req.session.currentFiscalYear = {
                startDate: newFiscalYear.startDate,
                endDate: newFiscalYear.endDate,
                name: newFiscalYear.name,
                dateFormat: newFiscalYear.dateFormat,
                isActive: true
            };

            req.flash('success', Fiscal Year switched to ${newFiscalYear.name} successfully.);
            res.redirect('/wholesellerDashboard');
        } catch (err) {
            console.error('Error switching fiscal year:', err);
            req.flash('error', 'Failed to switch fiscal year.');
            res.redirect('/wholesellerDashboard');
        }
    } else {
        res.redirect('/'); // Handle unauthorized access
    }
});

now also below routes is for change fiscal year between exsting fiscalYear, so now add features for if change fiscalyear back to previous do not update anything but if make change with items stock then switch to exsting new fiscalYear then also update with exsting opening stock of lastest fiscalYear serially, e.g: if there is 3 fiscalYear available and from 3rd to 2th and 1st go do not update anything only switch and if make change in 1st stock then 2th and 3rd opening stock also update with existing opening stock: but do not create new opening stock if there is exsting one:
// Route to change the current fiscal year
router.post('/change-fiscal-year', ensureAuthenticated, async (req, res) => {
    try {
        const { fiscalYearId } = req.body; // Get the selected fiscal year ID from the request
        const companyId = req.session.currentCompany; // Get the company ID from the session

        const fiscalYear = await FiscalYear.findOne({ _id: fiscalYearId, company: companyId });
        if (!fiscalYear) {
            return res.status(404).json({ error: 'Fiscal Year not found' });
        }

        // Update the session with the new fiscal year
        req.session.currentFiscalYear = {
            id: fiscalYear._id,
            startDate: fiscalYear.startDate,
            endDate: fiscalYear.endDate,
            name: fiscalYear.name,
            dateFormat: fiscalYear.dateFormat
        };
        console.log(current fiscalYear: ${req.session.currentFiscalYear})
        req.flash('success', 'Fiscal year changed successfully');
        res.redirect('/wholesellerDashboard');
    } catch (err) {
        console.error('Error changing fiscal year:', err);
        res.status(500).json({ error: 'Internal server error' });
    }
});