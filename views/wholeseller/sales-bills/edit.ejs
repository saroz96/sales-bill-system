<%- include('../layouts/boilerplate', { title: '' , body: '' }) %>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheet/sales/edit.css">

    <!-- Nepali Datepicker -->
    <link href="https://nepalidatepicker.sajanmaharjan.com.np/nepali.datepicker/css/nepali.datepicker.v4.0.7.min.css"
        rel="stylesheet" type="text/css" />

    <div class="container mt-4 wow-form expanded-container">
        <div class=" card mt-4 shadow-lg p-4 animate__animated animate__fadeInUp expanded-card">
            <div class="card-header">
                Update Sales

                <span id="customAlertForBillNumber" style="color: red; display: none;">Invoice is required!</span>
                <span id="transactionDateError" style="color: red; display: none;">Invalid date!</span>
                <span id="nepaliDateError" style="color: red; display: none;">Invalid date!</span>
            </div>
            <div class="card-body">
                <form action="/bills/edit/<%=bill._id%>?_method=PUT" method="post" id="billForm" class="wow-form">
                    <div class="form-group row">

                        <% if (companyDateFormat==='nepali' ) { %>
                            <!-- Nepali Date Fields -->
                            <div class="col">
                                <label for="transactionDateNepali">Transaction Date:</label>
                                <input type="text" name="transactionDateNepali" id="transactionDateNepali"
                                    class="form-control"
                                    value="<%= bill.transactionDate ? bill.transactionDate.toISOString().split('T')[0]: '' %>"
                                    onfocus="selectValue(this)" autofocus required />

                            </div>

                            <div class="col">
                                <label for="nepaliDate">Invoice Date:</label>
                                <input type="text" name="nepaliDate" id="nepaliDate" class="form-control" required
                                    value="<%= bill.date ? bill.date.toISOString().split('T')[0] : '' %>"
                                    onfocus="selectValue(this)" autofocus />

                            </div>

                            <% } else { %>
                                <!-- English Date Fields -->
                                <!-- <div class="col">
                                    <label for="transactionDateRoman">Transaction Date:</label>
                                    <input type="date" name="transactionDateRoman" id="transactionDateRoman"
                                        class="form-control"
                                        value="<%= bill.transactionDate ? bill.transactionDate.toISOString().split('T')[0]: '' %>"
                                        autofocus required>
                                </div> -->
                                <div class="col">
                                    <label for="transactionDateRoman">Transaction Date:</label>
                                    <input type="date" name="transactionDateRoman" id="transactionDateRoman"
                                        class="form-control"
                                        value="<%= bill.transactionDate ? bill.transactionDate.toISOString().split('T')[0]: '' %>"
                                        onfocus="selectValue(this)" autofocus required onblur="validateDate(this)">
                                    <span class="error-message" style="color: red; display: none;"></span>

                                </div>
                                <!-- <div class="col">
                                    <label for="billDate">Invoice Date:</label>
                                    <input type="date" name="billDate" id="billDate" class="form-control" required
                                        value="<%= bill.date ? bill.date.toISOString().split('T')[0] : '' %>">
                                </div> -->
                                <div class="col">
                                    <label for="billDate">Invoice Date:</label>
                                    <input type="date" name="billDate" id="billDate" class="form-control" required
                                        value="<%= bill.date ? bill.date.toISOString().split('T')[0] : '' %>"
                                        onfocus="selectValue(this)" onblur="validateDate(this)">
                                    <span class="error-message" style="color: red; display: none;"></span>
                                </div>
                                <% } %>
                                    <div class="col">
                                        <label for="billNumber">Inv. No:</label>
                                        <input type="number" name="billNumber" id="billNumber" class="form-control"
                                            value="<%= bill.billNumber %>" oninput="this.value='<%=bill.billNumber%>'"
                                            onfocus="selectValue(this)">
                                    </div>
                                    <div class="col">
                                        <label for="paymentMode">Payment Mode:</label>
                                        <select class="form-control" id="paymentMode" name="paymentMode"
                                            autocomplete="off">
                                            <option value="credit" <%=bill.paymentMode==='credit' ? 'selected' : '' %>
                                                >credit</option>
                                            <option value="cash" <%=bill.paymentMode==='cash' ? 'selected' : '' %>>cash
                                            </option>
                                        </select>
                                    </div>
                                    <div class="col">
                                        <label for="isVatExempt">VAT</label>
                                        <select name="isVatExempt" id="isVatExempt" class="form-control"
                                            onchange="toggleVatInputs()" autocomplete="off">
                                            <% if (vatEnabled) {%>
                                                <option value="all" <%=bill.isVatExempt===false&&bill.isVatAll==='true'
                                                    ? 'selected' :'' %>>All</option>
                                                <option value="false"
                                                    <%=bill.isVatExempt===false&&bill.isVatAll==='false' ? 'selected'
                                                    : '' %>>13%
                                                </option>
                                                <%}%>
                                                    <option value="true"
                                                        <%=bill.isVatExempt===true&&bill.isVatAll==='false' ? 'selected'
                                                        : '' %>>Exempt
                                                    </option>
                                        </select>
                                    </div>
                    </div>
                    <div class="form-group row">
                        <div class="col hidden">
                            <label for="purchaseSalesType">Type:</label>
                            <select id="purchaseSalesType" name="purchaseSalesType" class="form-control" disabled>
                                <option value="Sales">Sales</option>
                            </select>
                        </div>

                        <div class="col-6">
                            <!-- Account Selection Input -->
                            <label for="account">Party Name:</label>
                            <input type="text" id="account" name="account" class="form-control"
                                value="<%=bill.account.name%>" required>
                            <!-- <input type="hidden" id="accountId" name="accountId"> -->
                            <input type="hidden" id="accountId" name="accountId" value="<%= bill.account._id %>">
                        </div>

                        <div class="col">
                            <!-- New field for the address -->
                            <label for="address">Party Address:</label>
                            <input type="text" id="address" name="address" class="form-control"
                                value="<%=bill.account.address%>" onfocus="selectValue(this)">
                        </div>
                        <div class="col">
                            <!-- New field for the address -->
                            <label for="pan">Vat No:</label>
                            <input type="text" id="pan" name="pan" class="form-control" value="<%=bill.account.pan%>" onfocus="selectValue(this)">
                        </div>
                    </div>
                    <hr style="border: 1px solid gray;">

                    <table class="table table-bordered compact-table" id="itemsTable">
                        <thead>
                            <tr>
                                <th>S.No.</th>
                                <th>#</th>
                                <th>HSN</th>
                                <th>Description of Goods</th>
                                <th>Qty</th>
                                <th>Unit</th>
                                <th>Batch</th>
                                <th>Expiry</th>
                                <th>Price</th>
                                <th>Amount</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="items">
                            <!-- Item rows will be dynamically added here -->
                            <% if (items && items.length> 0) { %>
                                <% items.forEach((item, index)=> { %>
                                    <tr class="item <%= item.vatStatus ? 'vatable-item' : 'non-vatable-item' %>">
                                        <td>
                                            <%= index + 1 %>
                                        </td>
                                        <td>
                                            <%= item.item.uniqueNumber || 'N/A' %>
                                        </td>
                                        <td>
                                            <input type="hidden" name="items[<%= index %>][hscode]"
                                                value="<%= item.item.hscode || 'N/A' %>">
                                            <%= item.item.hscode || 'N/A' %>
                                        </td>
                                        <td class="col-3">
                                            <input type="hidden" name="items[<%= index %>][item]"
                                                value="<%= item.item._id %>">
                                            <%= item.item.name || 'N/A' %>
                                        </td>
                                        <td>
                                            <input type="number" name="items[<%= index %>][quantity]"
                                                value="<%= item.quantity %>" class="form-control item-quantity"
                                                id="quantity-<%= index %>" min="1" step="any"
                                                oninput="updateItemTotal(this)"
                                                onkeydown="handleQuantityKeydown(event, <%= index %>)"
                                                onfocus="selectValue(this)">
                                        </td>
                                        <td>
                                            <%= item.unit.name %>
                                                <input type="hidden" name="items[<%= index %>][unit]"
                                                    value="<%= item.unit._id %>">
                                        </td>
                                        <td>
                                            <input type="text" name="items[<%= index %>][batchNumber]"
                                                value="<%= item.batchNumber || '' %>"
                                                class="form-control item-batchNumber" id="batchNumber-<%= index %>"
                                                onkeydown="handleBatchKeydown(event, <%= index %>)"
                                                onfocus="selectValue(this)"
                                                oninput="this.value='<%=item.batchNumber%>'">
                                        </td>
                                        <td>
                                            <input type="date" name="items[<%= index %>][expiryDate]"
                                                value="<%= item.expiryDate ? item.expiryDate.toISOString().split('T')[0] : '' %>"
                                                class="form-control item-expiryDate" id="expiryDate-<%= index %>"
                                                onkeydown="handleExpDateKeydown(event, <%= index %>)"
                                                onfocus="selectValue(this)"
                                                oninput="this.value='<%= item.expiryDate ? item.expiryDate.toISOString().split('T')[0] : '' %>'">
                                        </td>
                                        <td>
                                            <input type="number" name="items[<%= index %>][price]"
                                                value="<%= item.price || 0 %>" class="form-control item-price"
                                                id="price-<%= index %>" step="any" oninput="updateItemTotal(this)"
                                                onkeydown="handlePriceKeydown(event, <%= index %>)"
                                                onfocus="selectValue(this)">
                                        </td>
                                        <td class="item-amount">
                                            <%= (item.quantity * item.price).toFixed(2) %>
                                        </td>
                                        <td class="hidden">
                                            <input type="text" name="items[<%=index%>][uniqueUuId]"
                                                value="<%=item.uniqueUuId%>">

                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-danger" onclick="removeItem(this)">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </td>
                                        <input type="hidden" name="items[<%= index %>][vatStatus]"
                                            value="<%= item.vatStatus %>">
                                    </tr>
                                    <% }); %>
                                        <% } %>

                        </tbody>
                    </table>

                    <hr style="border: 1px solid gray;">

                    <div class="form-group row">
                        <div class="col">
                            <label for="itemSearch">Search Item</label>
                            <input type="text" id="itemSearch" class="form-control" placeholder="Search for an item"
                                oninput="filterItems(this)" autocomplete="off"
                                onkeydown="handleItemSearchKeydown(event)">
                            <div id="dropdownMenu" class="dropdown-menu"></div>
                        </div>
                    </div>

                    <hr style="border: 1px solid gray;">
                    <!-- Bill Details Table -->
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th colspan="6" class="text-center bg-light">Bill Details</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Sub Total Row -->
                                <tr>
                                    <td><label for="subTotal">Sub Total:</label></td>
                                    <td class="text-right">
                                        <p class="form-control-plaintext">Rs. <span id="subTotal">
                                                <%= bill.subTotal.toFixed(2) %>
                                            </span></p>
                                    </td>

                                <!-- Discount Row -->
                                    <td><label for="discountPercentage">Discount %:</label></td>
                                    <td>
                                        <input type="number" step="any" name="discountPercentage"
                                            id="discountPercentage" class="form-control"
                                            value="<%= bill.discountPercentage.toFixed(2) %>"
                                            oninput="calculateTotal()" onfocus="selectValue(this)">
                                    </td>
                                    <td><label for="discountAmount">Discount (Rs.):</label></td>
                                    <td>
                                        <input type="number" step="any" name="discountAmount" id="discountAmount"
                                            value="<%= bill.discountAmount.toFixed(2) %>" class="form-control"
                                            oninput="calculateTotal()" onfocus="selectValue(this)">
                                    </td>
                                </tr>

                                <!-- VAT Rows (Initially visible) -->
                                <tr id="taxableAmountRow">
                                    <td><label for="taxableAmount">Taxable Amount:</label></td>
                                    <td class="text-right">
                                        <p class="form-control-plaintext">Rs. <span id="taxableAmount">
                                                <%= bill.taxableAmount.toFixed(2) %>
                                            </span>
                                        </p>
                                    </td>

                                    <td><label for="vatPercentage">VAT (13%):</label></td>
                                    <td>
                                        <input type="number" name="vatPercentage" id="vatPercentage"
                                            class="form-control" value="13.00" readonly>
                                    </td>
                                    <td><label for="vatAmount">VAT Amount:</label></td>
                                    <td class="text-right">
                                        <p class="form-control-plaintext">Rs. <span id="vatAmount">
                                                <%= bill.vatAmount.toFixed(2) %>
                                            </span></p>
                                    </td>
                                </tr>

                                <!-- Round Off & Total Row -->
                                <tr>
                                    <td><label for="roundOffAmount">Round Off:</label></td>
                                    <td>
                                        <input type="number" class="form-control" step="any" id="roundOffAmount"
                                            name="roundOffAmount" value="<%= bill.roundOffAmount.toFixed(2) %>" oninput="calculateTotal()" onfocus="selectValue(this)">
                                    </td>

                                <!-- Total Amount & In Words Row -->
                                    <td><label for="totalAmount">Total Amount:</label></td>
                                    <td>
                                        <p class="form-control-plaintext">Rs. <span id="totalAmount">
                                                <%= bill.totalAmount.toFixed(2) %>
                                            </span></p>
                                    </td>
                                    <td><label for="amountInWords">In Words:</label></td>
                                    <td class="text-right">
                                        <p class="form-control-plaintext" id="amountInWords">Zero Only.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Action Buttons -->
                    <div class="d-flex justify-content-end mt-4">
                        <button type="button" class="btn btn-primary mr-2 p-3" id="saveBill"
                            onclick="submitBillForm(false)">
                            <i class="bi bi-save"></i>
                        </button>
                        <button type="button" class="btn btn-secondary p-3" onclick="submitBillForm(true)">
                            <i class="bi bi-printer"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <style>
        #accountModal .modal-body {
            min-height: 400px;
            /* Ensures modal stays the same size */
            max-height: 500px;
            /* Limits height */
            overflow-y: auto;
            /* Allows scrolling */
        }
    </style>

    <!-- Bootstrap Modal -->
    <div class="modal fade" id="accountModal" tabindex="-1" aria-labelledby="accountModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="accountModalLabel">Select an Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <!-- Fixed Search Input -->
                <div class="p-3 bg-white sticky-top">
                    <input type="text" id="searchAccount" class="form-control" placeholder="Search Account"
                        onfocus="selectValue(this)" autocomplete="off">
                </div>
                <div class="modal-body p-0">

                    <!-- Scrollable Account List -->
                    <div class="overflow-auto" style="max-height: 400px;">
                        <ul id="accountList" class="list-group">
                            <!-- Accounts will be dynamically loaded here -->
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Transaction Modal -->
    <div class="modal fade" id="transactionModal" tabindex="-1" aria-labelledby="transactionModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="transactionModalLabel">Last Transactions</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <ul id="transactionList" class="list-group">
                        <!-- Transactions will be dynamically inserted here -->
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalButton"
                        onkeydown="handleCloseButtonKeydown(event)">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Batch and Expiry Modal -->
    <div class="modal fade" id="batchModal" tabindex="-1" aria-labelledby="batchModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="batchModalLabel">Batch Information</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>

                    </button>

                </div>
                <div class="modal-body" id="batchModalBody">
                    <!-- Batch information will be populated here dynamically -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="/javascript/sales/edit.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <script>
        function selectValue(input) {
            input.select(); // Select the value of the input field when it is focused
        }
    </script>


    <script src="https://nepalidatepicker.sajanmaharjan.com.np/nepali.datepicker/js/nepali.datepicker.v4.0.7.min.js"
        type="text/javascript"></script>


    <script type="text/javascript">

        //for account
        $(document).ready(function () {
            let selectedIndex = 0;
            let allAccounts = [];

            const $accountInput = $("#account");
            const $accountIdInput = $("#accountId"); // Hidden input field to store account ID
            const $accountModal = $("#accountModal");
            const $searchInput = $("#searchAccount");
            const $accountList = $("#accountList");
            const $modalBody = $accountList.parent();

            // Open modal when input is focused
            $accountInput.focus(function () {
                $accountModal.modal("show");
                fetchAccounts();
            });

            // Focus on search input when modal opens
            $accountModal.on("shown.bs.modal", function () {
                $searchInput.focus();
            });

            // Fetch accounts from server
            function fetchAccounts() {
                $.ajax({
                    url: "/api/accounts",
                    method: "GET",
                    success: function (data) {
                        allAccounts = data;
                        renderAccounts();
                    },
                    error: function (err) {
                        console.error("Error fetching accounts:", err);
                        $accountList.html('<li class="list-group-item text-danger">Failed to load accounts</li>');
                    }
                });
            }

            // Render accounts dynamically
            function renderAccounts(filtered = allAccounts) {
                $accountList.empty();

                if (filtered.length === 0) {
                    $accountList.html('<li class="list-group-item text-muted">No accounts found</li>');
                    return;
                }

                filtered.forEach((account, index) => {
                    const isActive = index === 0 ? "active" : "";
                    $accountList.append(`
        <li class="list-group-item account-item ${isActive}" 
            data-id="${account._id}" 
            data-name="${account.name}" 
            data-address="${account.address || 'N/A'}" 
            data-pan="${account.pan || 'N/A'}"
            data-index="${index}">
            <div class="d-flex justify-content-between">
                <strong>${account.name}</strong>
                <span>📍 ${account.address || 'N/A'} | 🆔 PAN: ${account.pan || 'N/A'}</span>
            </div>
        </li>
    `);
                });

                selectedIndex = 0;
            }

            // Search accounts dynamically
            $searchInput.on("input", function () {
                let searchText = $(this).val().toLowerCase();
                let filteredAccounts = allAccounts.filter(account =>
                    account.name.toLowerCase().includes(searchText)
                );

                renderAccounts(filteredAccounts);
            });

            // Handle keyboard navigation & scrolling
            $searchInput.on("keydown", function (e) {
                let visibleItems = $(".account-item");

                if (e.key === "ArrowDown") {
                    if (selectedIndex < visibleItems.length - 1) {
                        selectedIndex++;
                    }
                } else if (e.key === "ArrowUp") {
                    if (selectedIndex > 0) {
                        selectedIndex--;
                    }
                } else if (e.key === "Enter") {
                    e.preventDefault();
                    if (visibleItems.length > 0) {
                        selectAccount(visibleItems.eq(selectedIndex));
                    }
                }

                // Highlight the selected item
                visibleItems.removeClass("active");
                let selectedItem = visibleItems.eq(selectedIndex);
                selectedItem.addClass("active");

                adjustScroll(selectedItem);
            });

            // Click to select account
            $(document).on("click", ".account-item", function () {
                selectAccount($(this));
            });

            // Function to select account and populate fields
            function selectAccount(element) {
                let accountId = element.data("id"); // Get account ID
                let accountName = element.data("name");
                let accountAddress = element.data("address");
                let accountPan = element.data("pan");

                $accountInput.val(accountName);
                $accountIdInput.val(accountId); // Store account ID in hidden input
                $("#address").val(accountAddress);
                $("#pan").val(accountPan);
                $accountModal.modal("hide");

                // Move focus to the next input field
                setTimeout(() => {
                    $("#address").focus();
                }, 300);
            }

            // Function to adjust scroll position
            function adjustScroll(selectedItem) {
                let itemTop = selectedItem.position().top;
                let itemHeight = selectedItem.outerHeight();
                let modalHeight = $modalBody.innerHeight();

                if (itemTop + itemHeight > modalHeight) {
                    $modalBody.scrollTop($modalBody.scrollTop() + itemHeight);
                } else if (itemTop < 0) {
                    $modalBody.scrollTop($modalBody.scrollTop() - itemHeight);
                }
            }
        });


        window.onload = function () {
            var transactionDateNepali = document.getElementById("transactionDateNepali");
            var nepaliDate = document.getElementById("nepaliDate");

            transactionDateNepali.nepaliDatePicker();
            nepaliDate.nepaliDatePicker();

            // Add validation for Transaction Date
            transactionDateNepali.addEventListener("blur", function (event) {
                validateNepaliDate(this, "transactionDateError", event);
            });

            // Add validation for Invoice Date
            nepaliDate.addEventListener("blur", function (event) {
                validateNepaliDate(this, "nepaliDateError", event);
            });
        };

        // Function to validate Nepali date
        function validateNepaliDate(inputField, errorSpanId, event) {
            var errorSpan = document.getElementById(errorSpanId);
            var dateString = inputField.value.trim();

            // Check if the date is blank
            if (!dateString) {
                errorSpan.textContent = "Date cannot be blank!"; // Set error message
                errorSpan.style.display = "inline"; // Show error message
                event.preventDefault(); // Prevent moving to the next field
                inputField.focus(); // Keep focus on the current input field
                return;
            }

            // Check if the date is valid
            if (!isValidNepaliDate(dateString)) {
                errorSpan.textContent = "Invalid date!"; // Set error message
                errorSpan.style.display = "inline"; // Show error message
                event.preventDefault(); // Prevent moving to the next field
                inputField.focus(); // Keep focus on the current input field
            } else {
                errorSpan.style.display = "none"; // Hide error message
            }
        }

        // Function to check if the Nepali date is valid
        function isValidNepaliDate(dateString) {
            // Regular expression to match the Nepali date format (YYYY-MM-DD)
            var datePattern = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
            if (!datePattern.test(dateString)) return false;

            // Split the date string into year, month, and day
            var parts = dateString.split("-");
            var year = parseInt(parts[0], 10);
            var month = parseInt(parts[1], 10);
            var day = parseInt(parts[2], 10);

            // Check if the month and day are valid
            if (isNaN(year) || isNaN(month) || isNaN(day)) return false;
            if (month < 1 || month > 12 || day < 1 || day > 32) return false;

            // Manually validate the number of days in the month
            var maxDays = getMaxDaysInNepaliMonth(year, month);
            if (day > maxDays) return false;

            return true;
        }

        // Function to get the maximum number of days in a Nepali month
        function getMaxDaysInNepaliMonth(year, month) {
            // Define the number of days in each month for a given year
            // This is a simplified example and may not cover all edge cases
            var nepaliMonths = [
                31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 30 // Example for year 2080
            ];

            // Adjust for leap years if necessary
            if (year % 4 === 0 && month === 1) { // Check if it's a leap year and the month is Baisakh
                nepaliMonths[0] = 31; // Baisakh has 31 days in a leap year
            }

            return nepaliMonths[month - 1]; // Return the number of days for the given month
        }

        //for english date validation
        function validateDate(input) {
            const errorMessage = input.nextElementSibling; // Get the error message span
            const dateValue = input.value;

            // Check if the date is valid
            if (!dateValue || isNaN(new Date(dateValue).getTime())) {
                errorMessage.textContent = "Invalid date!";
                errorMessage.style.display = "block";
                input.focus(); // Prevent moving to the next field
            } else {
                errorMessage.style.display = "none"; // Hide error if valid
            }
        }

        function selectValue(input) {
            input.select(); // Select the value of the input field when it is focused
        }

        //-----------------------------------------------------------------------------------------

        // Add an event listener to the paymentMode select element
        document.getElementById('paymentMode').addEventListener('keydown', function (event) {
            // Check if the Enter key is pressed (key code 13)
            if (event.key === 'Enter') {
                // Prevent the default form submission behavior
                event.preventDefault();

                // Move focus to the next input field
                document.getElementById('isVatExempt').focus();
            }
        });

        document.getElementById('isVatExempt').addEventListener('keydown', function (event) {
            // Check if the Enter key is pressed (key code 13)
            if (event.key === 'Enter') {
                // Prevent the default form submission behavior
                event.preventDefault();

                // Move focus to the next input field
                document.getElementById('account').focus();
            }
        });
    </script>