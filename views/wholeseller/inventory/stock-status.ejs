<div class="form-control">
    <%- include('../layouts/boilerplate', { title: '' , body: '' }) %>
</div>

<style>
    table {
        width: 100%;
        border-collapse: collapse;
        table-layout: auto;
    }

    th,
    td {
        padding: 8px;
        text-align: left;
        border: 1px solid black;
        white-space: nowrap;
    }

    th {
        background-color: #f2f2f2;
    }

    @media print {
        @page {
            size: A4 landscape;
            margin: 10mm;
        }

        body {
            font-size: 12px;
            margin: 10mm;
        }

        #printHeader {
            display: block;
        }

        th,
        td {
            white-space: nowrap;
        }

        #filterForm,
        #searchInput,
        #itemsList .searchClass td:last-child {
            display: none;
        }

        #mainContainer {
            width: 100%;
        }
    }

    @media screen {
        #printHeader {
            display: none;
        }
    }
</style>

<div class="container mt-5" id="mainContainer">
    <h1>Stock Status</h1>
    <form method="get" action="/wholeseller/stock-status" id="stockStatusForm">
        <div class="row">
            <div class="col form-group">
                <label for="showPurchaseValue">
                    <input type="checkbox" name="showPurchaseValue" id="showPurchaseValue" value="true" <% if
                        (showPurchaseValue) { %>checked<% } %>> St.Value On C.P
                </label>
            </div>
            <div class="col form-group">
                <label for="showSalesValue">
                    <input type="checkbox" name="showSalesValue" id="showSalesValue" value="true" <% if (showSalesValue)
                        { %>checked<% } %>> St.Value On S.P
                </label>
            </div>
        </div>
    </form>

    <!-- Print Header -->
    <div id="printHeader" class="d-none text-center">
        <div class="header" style="text-align: center;">
            <h2 class="card-subtitle mb-2">
                <%= currentCompanyName %>
            </h2>
            <b>
                <h4>
                    <%= currentCompany.address %>-<%=currentCompany.ward%>, <%=currentCompany.city%>,
                                <%=currentCompany.country%> <br><br>
                                    Tel.: <%=currentCompany.phone%>, Email: <%=currentCompany.email%>
                                            <br><br>
                                            VAT NO.: <span id="pan-vat-container"></span>
                </h4>
            </b>
            <hr style="border: 0.5px solid;">
        </div>
    </div>

    <div class="row align-items-center">
        <div class="col mb-3">
            <form class="d-flex">
                <input type="text" class="form-control me-2" id="searchInput"
                    placeholder="Search by items name & category..." aria-label="Search">
            </form>
        </div>
    </div>
    <!-- Print Button -->
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
        <div>
            <button id="printAll" class="btn btn-secondary mb-3">Print All</button>
            <button id="printFiltered" class="btn btn-secondary mb-3">Print Filtered</button>
        </div>
        <div>
            As on: <span id="currentDate"></span>
        </div>
        <div>
            (F.Y: <%= currentFiscalYear ? currentFiscalYear.name : (initialCurrentFiscalYear ?
                initialCurrentFiscalYear.name : 'Not selected' ) %>)
        </div>
    </div>

    <table class="table table-striped" id="itemsList">
        <thead>
            <tr>
                <th>#</th>
                <th>Item Name</th>
                <th>Category</th>
                <th>Unit</th>
                <th>Total Stock</th>
                <th>Op. Stock</th>
                <th>Qty. In</th>
                <th>Qty. Out</th>
                <th>Min Stock</th>
                <th>Max Stock</th>
                <th>C.P</th>
                <th>S.P</th>
                <% if (showPurchaseValue) { %>
                    <th>St.Val (C.P)</th>
                    <% } %>
                        <% if (showSalesValue) { %>
                            <th>St.Val (S.P)</th>
                            <% } %>
            </tr>
        </thead>
        <tbody>
            <% items.forEach((item, index)=> { %>
                <tr class="searchClass">
                    <td>
                        <%= index + 1 %>
                    </td>
                    <td>
                        <%= item.name %>
                    </td>
                    <td>
                        <%= item.category.name %>
                    </td>
                    <td>
                        <%= item.unit.name %>
                    </td>
                    <td>
                        <%= item.stockEntries ? item.stockEntries.reduce((acc, entry)=> acc +
                            entry.quantity, 0) : 0
                            %>
                    </td>
                    <td>
                        <%= item.openingStockByFiscalYear.length ? item.openingStockByFiscalYear[0].openingStock : 0 %>
                    </td>
                    <td>
                        <%= item.totalQtyIn %>
                    </td>
                    <td>
                        <%= item.totalQtyOut %>
                    </td>
                    <td>
                        <%= item.minStock %>
                    </td>
                    <td>
                        <%= item.maxStock %>
                    </td>
                    <td>
                        <%= item.avgPuPrice.toFixed(2) %>
                    </td>
                    <td>
                        <%= item.avgPrice.toFixed(2) %>
                    </td>
                    <% if (showPurchaseValue) { %>
                        <td>
                            <%= item.totalStockValuePurchase.toFixed(2) %>
                        </td>
                        <% } %>
                            <% if (showSalesValue) { %>
                                <td>
                                    <%= item.totalStockValueSales.toFixed(2) %>
                                </td>
                                <% } %>
                </tr>
                <% }); %>
        </tbody>
        <tfoot>
            <tr>
                <th colspan="4">Total</th>
                <th id="totalStock"></th>
                <th id="totalOpeningStock"></th>
                <th id="totalQtyIn"></th>
                <th id="totalQtyOut"></th>
                <th id="totalMinStock"></th>
                <th id="totalMaxStock"></th>
                <th id="purchasePrice"></th>
                <th id="salesPrice"></th>
                <% if (showPurchaseValue) { %>
                    <th id="totalPurchaseValue"></th>
                    <% } %>
                        <% if (showSalesValue) { %>
                            <th id="totalSalesValue"></th>
                            <% } %>
            </tr>
        </tfoot>
    </table>
</div>

<script>
    // Add event listeners to checkboxes
    document.getElementById('showPurchaseValue').addEventListener('change', function () {
        document.getElementById('stockStatusForm').submit();
    });

    document.getElementById('showSalesValue').addEventListener('change', function () {
        document.getElementById('stockStatusForm').submit();
    });

    // Function to handle search input changes
    document.getElementById('searchInput').addEventListener('input', function () {
        filterBills();
    });

    // Function to filter bills based on search input
    function filterBills() {
        const searchQuery = document.getElementById('searchInput').value.trim().toLowerCase();
        const itemsList = document.getElementById('itemsList');
        const rows = itemsList.querySelectorAll('tbody tr.searchClass');

        rows.forEach(row => {
            const itemName = row.cells[1].textContent.trim().toLowerCase();
            const itemCategory = row.cells[2].textContent.trim().toLowerCase();

            const matchesSearch = itemName.includes(searchQuery) || itemCategory.includes(searchQuery);
            row.style.display = matchesSearch ? '' : 'none';
        });

        // Update totals based on visible rows
        updateTotals();
    }

    // Function to update totals based on visible rows
    function updateTotals() {
        let totalStock = 0;
        let totalOpeningStock = 0;
        let totalQtyIn = 0;
        let totalQtyOut = 0;
        let totalPurchaseValue = 0;
        let totalSalesValue = 0;

        const visibleRows = document.querySelectorAll('#itemsList tbody tr.searchClass:not([style*="display: none"])');

        visibleRows.forEach(row => {
            totalStock += parseFloat(row.cells[4].textContent) || 0; // Total Stock
            totalOpeningStock += parseFloat(row.cells[5].textContent) || 0; // Op. Stock
            totalQtyIn += parseFloat(row.cells[6].textContent) || 0; // Qty. In
            totalQtyOut += parseFloat(row.cells[7].textContent) || 0; // Qty. Out
            if (document.getElementById('showPurchaseValue').checked) {
                totalPurchaseValue += parseFloat(row.cells[12].textContent) || 0; // St.Val (C.P)
            }
            if (document.getElementById('showSalesValue').checked) {
                totalSalesValue += parseFloat(row.cells[13].textContent) || 0; // St.Val (S.P)
            }
        });

        // Update the footer totals
        document.getElementById('totalStock').textContent = totalStock;
        document.getElementById('totalOpeningStock').textContent = totalOpeningStock;
        document.getElementById('totalQtyIn').textContent = totalQtyIn;
        document.getElementById('totalQtyOut').textContent = totalQtyOut;
        document.getElementById('totalPurchaseValue').textContent = totalPurchaseValue.toFixed(2);
        document.getElementById('totalSalesValue').textContent = totalSalesValue.toFixed(2);
    }

    // Initialize totals on page load
    document.addEventListener('DOMContentLoaded', updateTotals);

    // Print all bills
    document.getElementById('printAll').addEventListener('click', function () {
        printBills(document.querySelectorAll('#itemsList tbody tr.searchClass'));
    });

    // Print filtered bills
    document.getElementById('printFiltered').addEventListener('click', function () {
        printBills(document.querySelectorAll('#itemsList tbody tr.searchClass:not([style*="display: none"])'));
    });

    // Function to print the selected bills
    function printBills(itemsRows) {
        const printWindow = window.open('', '_blank');
        printWindow.document.write('<html><head><title>Print Stock Status</title>');
        printWindow.document.write('<style>@page { size: A4 landscape; margin: 10mm; } table { width: 100%; border-collapse: collapse; } th, td { padding: 8px; text-align: left; border: 1px solid black; white-space: nowrap; } th { background-color: #f2f2f2; }</style>');
        printWindow.document.write('</head><body>');
        printWindow.document.write(document.getElementById('printHeader').innerHTML); // Include the header

        // Function to format the current date and time
        function getCurrentDateTime() {
            const now = new Date();
            const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit' };
            return now.toLocaleString(undefined, options);
        }

        printWindow.document.write(`
  <div style="display: flex; justify-content: space-between; align-items: center;">
    <h3>Stock Status</h3> As on: ${getCurrentDateTime()}
    <h3>(F.Y: <%= currentFiscalYear ? currentFiscalYear.name : (initialCurrentFiscalYear ? initialCurrentFiscalYear.name: 'Not selected') %>)</h3>
  </div>
`);
        printWindow.document.write('<table><thead><tr><th>#</th><th>Item Name</th><th>Category</th><th>Unit</th><th>Total Stock</th><th>Op. Stock</th><th>Qty. In</th><th>Qty. Out</th><th>Min Stock</th><th>Max Stock</th><th>C.P</th><th>S.P</th>');

        // Include Purchase and Sales values conditionally
        if (document.getElementById('showPurchaseValue').checked) {
            printWindow.document.write('<th>St.Val (C.P)</th>');
        }
        if (document.getElementById('showSalesValue').checked) {
            printWindow.document.write('<th>St.Val (S.P)</th>');
        }

        printWindow.document.write('</tr></thead><tbody>');

        itemsRows.forEach(row => {
            const cells = row.querySelectorAll('td');
            printWindow.document.write('<tr>');

            // Write cells up to the last cell that corresponds to the printed table
            for (let i = 0; i < cells.length; i++) {
                printWindow.document.write('<td>' + cells[i].textContent + '</td>');
            }

            printWindow.document.write('</tr>');
        });

        printWindow.document.write('</tbody><tfoot>');

        // Calculate totals for visible rows to display in the printout
        let totalStock = 0;
        let totalOpeningStock = 0;
        let totalQtyIn = 0;
        let totalQtyOut = 0;
        let totalPurchaseValue = 0;
        let totalSalesValue = 0;

        itemsRows.forEach(row => {
            totalStock += parseFloat(row.cells[4].textContent) || 0; // Total Stock
            totalOpeningStock += parseFloat(row.cells[5].textContent) || 0; // Op. Stock
            totalQtyIn += parseFloat(row.cells[6].textContent) || 0; // Qty. In
            totalQtyOut += parseFloat(row.cells[7].textContent) || 0; // Qty. Out
            if (document.getElementById('showPurchaseValue').checked) {
                totalPurchaseValue += parseFloat(row.cells[12].textContent) || 0; // St.Val (C.P)
            }
            if (document.getElementById('showSalesValue').checked) {
                totalSalesValue += parseFloat(row.cells[13].textContent) || 0; // St.Val (S.P)
            }
        });

        // Write totals in the footer
        printWindow.document.write('<tr>');
        printWindow.document.write('<th colspan="4">Total</th>');
        printWindow.document.write('<th>' + totalStock + '</th>');
        printWindow.document.write('<th>' + totalOpeningStock + '</th>');
        printWindow.document.write('<th>' + totalQtyIn + '</th>');
        printWindow.document.write('<th>' + totalQtyOut + '</th>');
        printWindow.document.write('<th></th>');
        printWindow.document.write('<th></th>');
        printWindow.document.write('<th></th>');
        printWindow.document.write('<th></th>');
        if (document.getElementById('showPurchaseValue').checked) {
            printWindow.document.write('<th>' + totalPurchaseValue.toFixed(2) + '</th>');
        }
        if (document.getElementById('showSalesValue').checked) {
            printWindow.document.write('<th>' + totalSalesValue.toFixed(2) + '</th>');
        }
        printWindow.document.write('</tr>');

        printWindow.document.write('</tfoot></table>');
        printWindow.document.write('</body></html>');
        printWindow.document.close();
        printWindow.print();
    }

    // Function to format the date
    function getCurrentDate() {
        const now = new Date();
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        return now.toLocaleDateString(undefined, options);
    }

    // Set the current date in the header
    document.getElementById('currentDate').textContent = getCurrentDate();

    const panVatNo = '<%= currentCompany.pan %>';
    const container = document.getElementById('pan-vat-container');

    for (let i = 0; i < panVatNo.length; i++) {
        const digit = document.createElement('span');
        digit.className = 'bordered-digit';
        digit.textContent = panVatNo[i];
        container.appendChild(digit);
    }
</script>