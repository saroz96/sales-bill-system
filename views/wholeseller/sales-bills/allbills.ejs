<%- include('../layouts/boilerplate', { title: '' , body: '' }) %>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.5.0/font/bootstrap-icons.min.css"
        rel="stylesheet">

    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            table-layout: auto;
            /* Let columns size automatically based on content */
        }

        th,
        td {
            padding: 8px;
            text-align: left;
            border: 1px solid black;
            white-space: nowrap;
        }

        th {
            background-color: #f2f2f2;
        }

        @media print {
            @page {
                size: A4 landscape;
                margin: 10mm;
            }

            body {
                font-size: 12px;
                margin: 10mm;
            }

            #printHeader {
                display: block;
                /* Show header when printing */
            }

            /* Ensure no text wrapping when printing */
            th,
            td {
                white-space: nowrap;
            }

            /* Hide unnecessary elements during printing */
            #filterForm,
            #searchInput,
            #billsList .searchClass td:last-child {
                display: none;
            }

            /* Adjust the container width to fit landscape */
            #mainContainer {
                width: 100%;
            }
        }

        @media screen {
            #printHeader {
                display: none;
                /* Hide header when on screen */
            }
        }

        /* Custom styles to resize the form */
        .expanded-container {
            max-width: 90%;
            /* Expand the container to 90% of the viewport width */
        }

        .expanded-card {
            width: 100%;
            /* Ensure the card takes full width of the container */
        }

        @media (min-width: 768px) {
            .expanded-container {
                max-width: 90%;
                /* Adjust width for medium and larger screens */
            }
        }
    </style>


    <div class="container wow-form expanded-container">
        <div class=" card mt-4 shadow-lg p-4 animate__animated animate__fadeInUp expanded-card">

            <!-- Print Header -->
            <div id="printHeader" class="d-none text-center">
                <div class="header" style="text-align: center;">
                    <h2 class="card-subtitle mb-2">
                        <%= currentCompanyName %>
                    </h2>
                    <b>
                        <h4>
                            <%= currentCompany.address %>-<%=currentCompany.ward%>, <%=currentCompany.city%>,
                                        <%=currentCompany.country%> <br>
                                            Tel.: <%=currentCompany.phone%>, Email: <%=currentCompany.email%>
                                                    <br>
                                                    VAT NO.: <span id="pan-vat-container"></span>
                        </h4>
                    </b>
                    <hr style="border: 0.5px solid;">
                </div>
            </div>
            <br>
            <h1 class="mb-4 text-center" id="printh1" style="text-decoration: underline;">List of Sales Vouchers</h1>

            <!-- Container for search and filter forms -->
            <div class="row g-3 align-items-center mb-4"> <!-- Added g-3 for better gap between elements -->
                <!-- Search Input Section -->
                <div class="col-9">
                    <form class="input-group">
                        <input type="text" class="form-control" id="searchInput"
                            placeholder="Search by invoice number, party name, or user..." aria-label="Search">
                        <button class="btn btn-outline-secondary" type="button" id="clearSearch">Clear</button>
                        <!-- Added clear button -->
                    </form>
                </div>

                <!-- Filter Section -->
                <div class="col-md-3">
                    <form id="filterForm" class="d-flex align-items-center justify-content-md-end">
                        <!-- Center on small, right-align on larger screens -->
                        <label for="paymentModeFilter" class="form-label me-2 mb-0">Payment Mode:</label>
                        <select class="form-select" id="paymentModeFilter" aria-label="Filter by Payment Mode"
                            style="max-width: 200px;">
                            <option value="">All</option>
                            <option value="cash">Cash</option>
                            <option value="credit">Credit</option>
                        </select>
                    </form>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <a href="/bills" class="btn btn-primary mb-3"><i class="bi bi-receipt"></i></a>
                    <!-- Print Button -->
                    <button id="printAllBills" class="btn btn-secondary mb-3"><i class="bi bi-printer"> All</i></button>
                    <button id="printFilteredBills" class="btn btn-secondary mb-3"><i class="bi bi-printer">
                            Filtered</i></button>
                </div>

                <table class="table table-striped" id="billsList">
                    <thead>
                        <tr>
                            <th>Bill no.</th>
                            <th>Date</th>
                            <th>Party Name</th>
                            <th>Pay.Mode</th>
                            <th>Sub Total</th>
                            <th>Discount</th>
                            <th>Taxable</th>
                            <th>Vat</th>
                            <th>Off(-/+)</th>
                            <th>Total</th>
                            <th>User</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% bills.forEach(salesBill=> { %>
                            <tr class="searchClass" data-payment-mode="<%= salesBill.paymentMode %>">
                                <td>
                                    <%= salesBill.billNumber %>
                                </td>
                                <td>
                                    <%= new Date(salesBill.date).toLocaleDateString() %>
                                </td>
                                <td>
                                    <%= salesBill.account ? salesBill.account.name : 'Account Not Found' %>
                                </td>
                                <td>
                                    <%= salesBill.paymentMode %>
                                </td>
                                <td>
                                    <%= salesBill.subTotal.toFixed(2) %>
                                </td>
                                <td>
                                    <%= salesBill.discountPercentage.toFixed(2) %>% - Rs.<%=
                                            salesBill.discountAmount.toFixed(2) %>
                                </td>
                                <td>
                                    <%= salesBill.taxableAmount.toFixed(2) %>
                                </td>
                                <td>
                                    <%= salesBill.vatPercentage %>% - Rs.<%= salesBill.vatAmount.toFixed(2) %>
                                </td>
                                <td>
                                    <%= salesBill.roundOffAmount.toFixed(2) %>
                                </td>
                                <td>
                                    <%= salesBill.totalAmount.toFixed(2) %>
                                </td>
                                <td>
                                    <%= salesBill.user?salesBill.user.name:'User Not Found' %>
                                </td>
                                <td>
                                    <a href="/bills/<%= salesBill._id %>/print">View</a>
                                    <a href="/bills/edit/<%=salesBill._id%>">Edit</a>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                    <!-- Totals row outside tbody -->
                    <tfoot>
                        <tr id="totalsRow">
                            <td colspan="4"><strong>Total:</strong></td>
                            <td><strong id="totalSubTotal">0.00</strong></td>
                            <td><strong id="totalDiscount">0.00</strong></td>
                            <td><strong id="totalTaxable">0.00</strong></td>
                            <td><strong id="totalVat">0.00</strong></td>
                            <td><strong id="totalRoundOff">0.00</strong></td>
                            <td><strong id="totalAmount">0.00</strong></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>

        <script>
            // Function to handle search input changes
            document.getElementById('searchInput').addEventListener('input', function () {
                filterBills();
            });

            // Function to handle payment mode filter changes
            document.getElementById('paymentModeFilter').addEventListener('change', function () {
                filterBills();
            });

            // Function to filter bills based on search input and payment mode filter
            function filterBills() {
                const searchQuery = document.getElementById('searchInput').value.trim().toLowerCase();
                const selectedPaymentMode = document.getElementById('paymentModeFilter').value.trim().toLowerCase();
                const billsList = document.getElementById('billsList');
                const rows = billsList.querySelectorAll('tbody tr.searchClass');

                rows.forEach(row => {
                    const billNumber = row.cells[0].textContent.trim().toLowerCase();
                    const companyName = row.cells[2].textContent.trim().toLowerCase();
                    const paymentMode = row.cells[3].textContent.trim().toLowerCase();
                    const users = row.cells[10].textContent.trim().toLowerCase();

                    const matchesSearch = companyName.includes(searchQuery) || billNumber.includes(searchQuery) || users.includes(searchQuery);
                    const matchesPaymentMode = selectedPaymentMode === '' || paymentMode === selectedPaymentMode;

                    if (matchesSearch && matchesPaymentMode) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Update totals based on visible rows
                updateTotals();
            }

            // Function to update totals based on visible rows
            function updateTotals() {
                let totalSubTotal = 0;
                let totalDiscount = 0;
                let totalTaxable = 0;
                let totalVat = 0;
                let totalRoundOff = 0;
                let totalAmount = 0;

                const visibleRows = document.querySelectorAll('#billsList tbody tr.searchClass:not([style*="display: none"])');

                visibleRows.forEach(row => {
                    totalSubTotal += parseFloat(row.cells[4].textContent); // Sub Total
                    totalDiscount += parseFloat(row.cells[5].textContent.split(' - Rs.')[1]); // Discount
                    totalTaxable += parseFloat(row.cells[6].textContent); // Taxable
                    totalVat += parseFloat(row.cells[7].textContent.split(' - Rs.')[1]); // Vat
                    totalRoundOff += parseFloat(row.cells[8].textContent); // Round Off
                    totalAmount += parseFloat(row.cells[9].textContent); // Total
                });

                // Update totals row in the footer
                document.getElementById('totalSubTotal').textContent = totalSubTotal.toFixed(2);
                document.getElementById('totalDiscount').textContent = totalDiscount.toFixed(2);
                document.getElementById('totalTaxable').textContent = totalTaxable.toFixed(2);
                document.getElementById('totalVat').textContent = totalVat.toFixed(2);
                document.getElementById('totalRoundOff').textContent = totalRoundOff.toFixed(2);
                document.getElementById('totalAmount').textContent = totalAmount.toFixed(2);
            }

            // Initial call to filterBills to apply any initial filters (if needed)
            filterBills();

            // //Handle scape buttons
            // document.addEventListener('keydown', function (event) {
            //     if (event.key === 'Escape') {
            //         event.preventDefault(); // Prevent default escape behavior
            //         var exitModal = new bootstrap.Modal(document.getElementById('exitConfirmationModal'));
            //         exitModal.show();
            //     }
            // });

            // // Handle the exit confirmation
            // document.getElementById('confirmExit').addEventListener('click', function () {
            //     // Redirect to the home page
            //     window.location.href = '/wholesellerDashboard'; // Change '/' to your home page URL
            // });


            // Print all bills
            document.getElementById('printAllBills').addEventListener('click', function () {
                printBills(document.querySelectorAll('#billsList tbody tr.searchClass'));
            });

            // Print filtered bills
            document.getElementById('printFilteredBills').addEventListener('click', function () {
                printBills(document.querySelectorAll('#billsList tbody tr.searchClass:not([style*="display: none"])'));
            });

            // Function to print the selected bills
            function printBills(billRows) {
                const printWindow = window.open('', '_blank');
                printWindow.document.write('<html><head><title>Print Bills</title>');
                printWindow.document.write('<style>table { width: 100%; border-collapse: collapse; } th, td { padding: 8px; text-align: left; border: 1px solid black; white-space: nowrap; } th { background-color: #f2f2f2; }</style>');
                printWindow.document.write('</head><body>');
                printWindow.document.write(document.getElementById('printHeader').innerHTML); // Include the header
                printWindow.document.write('<h1 style="text-align: center;">List of Sales Vouchers</h1>');
                printWindow.document.write('<table><thead><tr><th>Bill no.</th><th>Date</th><th>Party Name</th><th>Pay.Mode</th><th>Sub Total</th><th>Discount</th><th>Taxable</th><th>Vat</th><th>Off(-/+)</th><th>Total</th><th>User</th></tr></thead><tbody>');

                let totalSubTotal = 0;
                let totalDiscount = 0;
                let totalTaxable = 0;
                let totalVat = 0;
                let totalRoundOff = 0;
                let totalAmount = 0;

                billRows.forEach(row => {
                    const cells = row.querySelectorAll('td');
                    printWindow.document.write('<tr>');

                    // Only write cells up to the last cell that corresponds to the printed table
                    for (let i = 0; i < cells.length - 1; i++) { // Exclude the last cell (Actions)
                        printWindow.document.write('<td>' + cells[i].textContent + '</td>');
                    }

                    // Accumulate totals for each column
                    if (row.style.display !== 'none') { // Only consider visible rows
                        totalSubTotal += parseFloat(row.cells[4].textContent) || 0; // Sub Total
                        totalDiscount += parseFloat(row.cells[5].textContent.split(' - Rs.')[1]) || 0; // Discount
                        totalTaxable += parseFloat(row.cells[6].textContent) || 0; // Taxable
                        totalVat += parseFloat(row.cells[7].textContent.split(' - Rs.')[1]) || 0; // Vat
                        totalRoundOff += parseFloat(row.cells[8].textContent) || 0; // Round Off
                        totalAmount += parseFloat(row.cells[9].textContent) || 0; // Total
                    }

                    printWindow.document.write('</tr>');
                });

                // Add a totals row at the bottom of the table
                printWindow.document.write('<tr style="font-weight: bold; background-color: #e0e0e0;">');
                printWindow.document.write('<td colspan="4" style="text-align: right;">Totals:</td>'); // Span the first four columns
                printWindow.document.write('<td>' + totalSubTotal.toFixed(2) + '</td>');
                printWindow.document.write('<td>' + totalDiscount.toFixed(2) + '</td>');
                printWindow.document.write('<td>' + totalTaxable.toFixed(2) + '</td>');
                printWindow.document.write('<td>' + totalVat.toFixed(2) + '</td>');
                printWindow.document.write('<td>' + totalRoundOff.toFixed(2) + '</td>');
                printWindow.document.write('<td>' + totalAmount.toFixed(2) + '</td>');
                printWindow.document.write('<td></td>'); // Empty cell for User column
                printWindow.document.write('</tr>');

                printWindow.document.write('</tbody></table>');
                printWindow.document.write('</body></html>');
                printWindow.document.close();
                printWindow.focus();
                printWindow.print();
            }

            const panVatNo = '<%= currentCompany.pan %>';
            const container = document.getElementById('pan-vat-container');

            for (let i = 0; i < panVatNo.length; i++) {
                const digit = document.createElement('span');
                digit.className = 'bordered-digit';
                digit.textContent = panVatNo[i];
                container.appendChild(digit);
            }

            document.getElementById('clearSearch').addEventListener('click', () => {
                const inputField = document.getElementById('searchInput');

                // Check if the input field has a value
                if (inputField.value !== '') {
                    inputField.value = ''; // Clear the input field
                } else {
                    alert('Input field is already empty.');
                }
            });

        </script>