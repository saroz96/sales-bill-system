<%- include('../layouts/boilerplate') %>
bills.ejs new design
    <style>
        .vatable-item {
            background-color: lightgreen;
        }

        .non-vatable-item {
            background-color: lightyellow;
        }

        .dropdown-menu {
            width: 100%;
            max-height: 200px;
            overflow-y: auto;
        }

        .dropdown-item {
            cursor: pointer;
        }

        .item {
            margin-bottom: 10px;
        }

        .last-transactions {
            list-style-type: none;
            padding-left: 0;
        }

        .credit-party {
            display: none;
            /* Hide credit party options by default */
        }
    </style>

    <div class="container">
        <div class="card mt-4">
            <div class="card-header">
                Create New Bill
                </h1>
            </div>
            <div class="card-body">
                <form action="/bills" method="post" id="billForm">
                    <div class="form-group row">
                        <div class="col">
                            <p class="form-control-plaintext" id="billNumber">
                                <label for="billNumber">Bill No:</label>
                                <%= nextBillNumber %>
                                    <input type="hidden" name="billNumber" value="<%= nextBillNumber %>" readonly>
                            </p>
                        </div>
                        <div class="col">
                            <label for="billDate">Bill Date</label>
                            <input type="date" name="billDate" id="billDate" class="form-control" required
                                value="<%= new Date().toISOString().split('T')[0] %>"
                                onkeydown="handleEnter(event, 'paymentMode')" autofocus>
                        </div>
                        <div class="col">
                            <label for="paymentMode">Payment Mode:</label>
                            <select class="form-control" id="paymentMode" name="paymentMode"
                                onkeydown="handleEnter(event,'account')" onchange="toggleCreditPartyOptions()">
                                <option value="cash">Cash</option>
                                <option value="credit">Credit</option>
                            </select>
                        </div>
                        <div class="col" class="credit-party">
                            <label for="account">Company</label>
                            <select name="account" id="account" class="form-control"
                                onkeydown="handleEnter(event, 'isVatExempt')" required>
                                <% if (accounts && accounts.length> 0) { %>
                                    <% accounts.forEach(account=> { %>
                                        <option value="<%= account._id %>">
                                            <%= account.name %>
                                        </option>
                                        <% }); %>
                                            <% } else { %>
                                                <option disabled>No companies available</option>
                                                <% } %>
                            </select>
                        </div>
                        <div class="col">
                            <label for="isVatExempt">VAT</label>
                            <select name="isVatExempt" id="isVatExempt" class="form-control"
                                onkeydown="handleEnter(event, 'searchItem')" onchange="toggleVatInputs()">
                                <option value="false">13%</option>
                                <option value="true">Exempt</option>
                            </select>
                        </div>
                    </div>


                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#itemSelectionModal">
                        Select Item
                    </button>
                    <div class="row">
                        <div class="col">
                            <input type="text" name="items[0][item]" id="itemName" onchange="updateItemPrice(this);">
                        </div>
                        <div class="col">
                            <input type="number" name="items[0][quantity]" id="quantity" class="quantity-input"
                                oninput="calculateTotal()">
                        </div>
                        <div class="col">
                            <input type="number" name="items[0][price]" id="price" class="price-input"
                                oninput="calculateTotal()">
                        </div>
                        <div class="col">
                            <span class="form-control-plaintext item-total">0</span>
                        </div>
                    </div>
                    <!-- <button type="button" class="btn btn-secondary mb-3" onclick="addItem()">Add
                        Item</button> -->
                    <div class="form-group row">
                        <div class="col">
                            <label for="subTotal">Sub Total</label>
                            <p class="form-control-plaintext">Rs.<span id="subTotal">0</span></p>
                        </div>
                        <div class="col">
                            <label for="discountPercentage">Discount %</label>
                            <input type="number" step="any" name="discountPercentage" id="discountPercentage"
                                class="form-control" value="0" oninput="calculateTotal()">
                        </div>
                        <div class="col">
                            <label for="discountAmount">Discount(Rs.)</label>
                            <input type="number" step="any" name="discountAmount" id="discountAmount" value="0"
                                class="form-control" oninput="calculateTotal()">
                        </div>
                    </div>
                    <div id="vatInputs">
                        <div class="form-group row">
                            <div class="col">
                                <label for="taxableAmount">Taxable Amount</label>
                                <p class="form-control-plaintext">Rs.<span id="taxableAmount">0</span></p>
                            </div>
                            <div class="col">
                                <label for="vatPercentage">VAT %</label>
                                <input type="number" name="vatPercentage" id="vatPercentage" class="form-control"
                                    value="13" oninput="calculateTotal()">
                            </div>
                            <div class="col">
                                <label for="vatAmount">VAT Amount</label>
                                <p class="form-control-plaintext">Rs.<span id="vatAmount">0</span></p>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col">
                            <label for="totalAmount">Total Amount</label>
                            <p class="form-control-plaintext">Rs.<span id="totalAmount">0</span></p>
                        </div>
                        <div class="col">
                            <label for="roundOffAmount">Round Off Amount</label>
                            <input type="number" step="any" id="roundOffAmount" name="roundOffAmount" value="0">
                        </div>
                        <div class="col">
                            <label for="amountInWords">In Words: </label>
                            <p class="form-control-plaintext" id="amountInWords">Zero</p>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="submitBillForm(false)">Save Bill</button>
                    <button type="button" class="btn btn-secondary" onclick="showPrintModal()">Save & Print
                        Bill</button>
                </form>
            </div>
        </div>
        <a href="/" class="btn btn-link mt-4">Back</a>
    </div>

    <!-- Item Selection Modal -->
    <div class="modal fade" id="itemSelectionModal" tabindex="-1" role="dialog"
        aria-labelledby="itemSelectionModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="itemSelectionModalLabel">Select Item</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Display items fetched from backend here -->
                    <div id="itemList">
                        <!-- Items will be dynamically inserted here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="printModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Print Bill</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Do you want to print this bill?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="submitBillForm(true)">Save & Print</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Transaction Modal -->
    <div class="modal fade" id="transactionModal" tabindex="-1" aria-labelledby="transactionModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="transactionModalLabel">Last Transactions</h5>
                    <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <ul id="transactionList" class="list-group">
                        <!-- Transactions will be dynamically inserted here -->
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" aria-label="Close">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>

        // document.addEventListener('DOMContentLoaded', async function () {
        //     try {
        //         const response = await fetch('/items/search');
        //         if (!response.ok) {
        //             throw new Error('Failed to fetch items');
        //         }
        //         const items = await response.json();
        //         // Process fetched items, e.g., populate dropdowns or lists
        //     } catch (error) {
        //         console.error('Error fetching items:', error.message);
        //         // Handle error (e.g., display a message to the user)
        //     }
        // });

        // JavaScript to fetch items when modal is opened
        // Use jQuery instead of $ to avoid conflicts
        // Use jQuery instead of $ to avoid conflicts
        jQuery(document).ready(function ($) {
            var selectedItemId = null; // Variable to track the selected item ID

            function fetchLastTransactions(itemId) {
                const accountId = document.getElementById('account').value;
                console.log('Fetching transactions for item:', itemId, 'and account:', accountId);
                $.ajax({
                    url: `/api/transactions/${itemId}/${accountId}`, // Ensure this matches your backend route
                    method: 'GET',
                    success: function (response) {
                        console.log('Response from server:', response);
                        var transactionList = $('#transactionList');
                        transactionList.empty(); // Clear existing transactions
                        if (response.transactions && response.transactions.length > 0) {
                            response.transactions.forEach(function (transaction) {
                                var transactionHtml = `
                        <li class="list-group-item">
                            ${new Date(transaction.transactionDate).toLocaleDateString()} - 
                            Bill Number: ${transaction.billNumber} - 
                            Type: ${transaction.type} - 
                            Payment Mode: ${transaction.paymentMode} - 
                            Quantity: ${transaction.quantity} - 
                            Rs.${transaction.price}
                        </li>
                    `;
                                transactionList.append(transactionHtml);
                            });
                        } else {
                            transactionList.append('<li class="list-group-item">No transactions available</li>');
                        }
                        // Show the transaction modal
                        $('#transactionModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching transactions:', error);
                    }
                });
            }


            // Fetch items when modal is shown
            $('#itemSelectionModal').on('show.bs.modal', function () {
                $.ajax({
                    url: '/items/search', // Replace with your server-side route to fetch items
                    method: 'GET',
                    success: function (response) {
                        var itemList = $('#itemList');
                        itemList.empty(); // Clear existing items
                        if (response.items && response.items.length > 0) {
                            response.items.forEach(function (item) {
                                var itemHtml = `
                            <div class="form-group row">
                                <div class="col">
                                    <div class="item" data-item-id="${item._id}" data-item-name="${item.name}" data-item-price="${item.price}">
                                        <p>${item.name} - Rs.${item.price}</p>
                                    </div>
                                </div>
                                <div class="col">
                                    <button type="button" class="btn btn-primary select-item">Select</button>
                                </div>
                            </div>
                        `;
                                itemList.append(itemHtml);
                            });
                        } else {
                            itemList.append('<p>No items available</p>');
                        }
                    },
                    error: function () {
                        console.error('Error fetching items.');
                    }
                });
            });

            // Handle item selection
            $(document).on('click', '.select-item', function () {
                var selectedItem = $(this).closest('.form-group').find('.item');
                var itemId = selectedItem.data('item-id');
                var itemName = selectedItem.data('item-name');
                var itemPrice = selectedItem.data('item-price');

                // Update main form fields with selected item details
                $('#itemName').val(itemName); // Update input field for item name
                $('#quantity').val(''); // Clear previous quantity
                $('#price').val(itemPrice); // Set unit rate based on selected item price

                // Fetch last transactions for the selected item
                fetchLastTransactions(itemId);

                // Close the modal
                $('#itemSelectionModal').modal('hide');
            });

            // Handle modal hide event to re-enable backdrop
            $('#itemSelectionModal').on('hidden.bs.modal', function () {
                $('.modal-backdrop').remove(); // Remove modal backdrop
            });
        });


        // async function submitBillForm(print) {
        //     const billForm = document.getElementById('billForm');
        //     try {
        //         const response = await fetch('/bills', {
        //             method: 'POST',
        //             headers: {
        //                 'Content-Type': 'application/json'
        //             },
        //             body: JSON.stringify({
        //                 billNumber: billForm.billNumber.value,
        //                 billDate: billForm.billDate.value,
        //                 paymentMode: billForm.paymentMode.value,
        //                 account: billForm.account.value,
        //                 items: items[0][item], /* Construct items array from form */
        //                 discountPercentage: billForm.discountPercentage.value,
        //                 discountAmount: billForm.discountAmount.value,
        //                 vatPercentage: billForm.vatPercentage.value,
        //                 roundOffAmount: billForm.roundOffAmount.value
        //             })
        //         });
        //         if (!response.ok) {
        //             throw new Error('Failed to create sales bill');
        //         }
        //         const data = await response.json();
        //         // Handle success (e.g., show success message to user)
        //     } catch (error) {
        //         console.error('Error creating sales bill:', error.message);
        //         // Handle error (e.g., display error message to user)
        //     }
        // }

        function addItem() {
            const itemsDiv = document.getElementById('items');
            const index = itemsDiv.children.length;
            const newItem = document.createElement('div');
            newItem.className = 'form-group row item';
            newItem.innerHTML = `
        <div class="col-sm-6">
            <input type="text" class="form-control item-search" placeholder="Search Product" oninput="filterItems(this)">
            <div class="dropdown-menu"></div>
            <select name="items[${index}][item]" class="form-control item-select mt-2" required onchange="fetchLastTransactions(this); updateItemPrice(this);">
                <% if (items && items.length > 0) { %>
                    <% items.forEach(item => { %>
                        <option value="<%= item._id %>" data-price="<%= item.price %>" data-vat="<%= item.vatStatus %>"><%= item.name %> - <%= item.category.name %> - <%= item.stock %> - <%= item.unit ? item.unit.name : '' %> - Rs.<%= item.price %></option>
                    <% }); %>
                <% } else { %>
                    <option disabled>No items available</option>
                <% } %>
            </select>
            <ul class="last-transactions mt-2"></ul>
        </div>
        <div class="col-sm-2">
            <input type="number" name="items[${index}][quantity]" class="form-control quantity-input" placeholder="Quantity" required oninput="calculateTotal()">
        </div>
        <div class="col-sm-2">
            <input type="number" name="items[${index}][price]" class="form-control price-input" placeholder="Price" required oninput="calculateTotal()">
        </div>
        <div class="col-sm-2">
            <span class="form-control-plaintext item-total">0</span>
            <button type="button" class="btn btn-danger btn-sm" onclick="removeItem(this)">Remove</button>
        </div>
    `;
            itemsDiv.appendChild(newItem);
            updateItemPrice(newItem.querySelector('.item-select'));
            filterItemsBasedOnVatStatus();
        }

        let shouldPrint = false;

        function showPrintModal() {
            $('#printModal').modal('show');
        }

        function submitBillForm(print) {
            shouldPrint = print;
            const billForm = document.getElementById('billForm');
            if (print) {
                const url = new URL(billForm.action);
                url.searchParams.append('print', 'true');
                billForm.action = url.toString();
            }
            billForm.submit();
        }

        document.getElementById('billForm').addEventListener('submit', function (event) {
            if (!shouldPrint && event.submitter && event.submitter.innerText === 'Save & Print Bill') {
                event.preventDefault();
                showPrintModal();
            }
        });

        function handleEnter(event, nextInputId) {
            if (event.key === 'Enter') {
                event.preventDefault();//prevent default behaviour form submission
                document.getElementById(nextInputId).focus();//move fucus to the next input
            }
        }
    </script>

    <script src="/js/bills.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>