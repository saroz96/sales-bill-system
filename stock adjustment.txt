<%- include('../layouts/boilerplate') %>


    <style>
        /* Custom CSS for modal width */
        .modal-xl {
            max-width: 50%;
            /* Adjust as needed */
        }
    </style>
    <div class="container mt-4">
        <h1 class="mb-4">New Stock Adjustment</h1>

        <!-- The Modal -->
        <div class="modal fade" id="itemModal">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Select Item and Enter Details</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <!-- Modal Body -->
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="modalItem">Item</label>
                            <input type="text" id="modalItemSearch" class="form-control mb-3"
                                placeholder="Search items...">
                            <select id="modalItem" class="form-control" required>
                                <% items.forEach(item=> { %>
                                    <option value="<%= item._id %>">
                                        <%= item.name %>
                                    </option>
                                    <% }) %>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="modalQuantity">Quantity</label>
                            <input type="number" id="modalQuantity" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="modalAdjustmentType">Adjustment Type</label>
                            <select id="modalAdjustmentType" class="form-control" required>
                                <option value="xcess">Xcess</option>
                                <option value="short">Short</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="modalReason">Reason</label>
                            <input type="text" id="modalReason" class="form-control" required>
                        </div>
                    </div>
                    <!-- Modal Footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="addItemButton">Add Item</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Display Added Items -->
        <h2 class="mt-4">Added Items</h2>
        <!-- Button to Open the Modal -->
        <input type="text" class="form-control col-4" data-toggle="modal" data-target="#itemModal"
            placeholder="Items search.." />
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Item</th>
                    <th>Quantity</th>
                    <th>Adjustment Type</th>
                    <th>Reason</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="addedItemsList"></tbody>
        </table>
        <!-- Form to Submit All Items -->
        <form id="stockAdjustmentForm" action="/stockAdjustments" method="POST">
            <div id="itemsList"></div>
            <button type="submit" class="btn btn-success mt-4">Submit All Items</button>
        </form>
    </div>

    <script>
        let itemIndex = 0;

        document.getElementById('addItemButton').addEventListener('click', function () {
            const itemSelect = document.getElementById('modalItem');
            const quantityInput = document.getElementById('modalQuantity');
            const adjustmentTypeSelect = document.getElementById('modalAdjustmentType');
            const reasonInput = document.getElementById('modalReason');

            const itemId = itemSelect.value;
            const itemName = itemSelect.options[itemSelect.selectedIndex].text;
            const quantity = quantityInput.value;
            const adjustmentType = adjustmentTypeSelect.value;
            const reason = reasonInput.value;

            if (!itemId || !quantity || !adjustmentType || !reason) {
                alert("Please fill out all fields.");
                return;
            }

            // Add item to the form
            const itemHtml = `
            <input type="hidden" name="items[${itemIndex}][item]" value="${itemId}">
            <input type="hidden" name="items[${itemIndex}][quantity]" value="${quantity}">
            <input type="hidden" name="items[${itemIndex}][adjustmentType]" value="${adjustmentType}">
            <input type="hidden" name="items[${itemIndex}][reason]" value="${reason}">
        `;
            document.getElementById('itemsList').insertAdjacentHTML('beforeend', itemHtml);

            // Add item to the display table
            const tableRowHtml = `
            <tr data-index="${itemIndex}">
                <td>${itemIndex + 1}</td>
                <td>${itemName}</td>
                <td>${quantity}</td>
                <td>${adjustmentType}</td>
                <td>${reason}</td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm removeItemButton">Remove</button>
                </td>
            </tr>
        `;
            document.getElementById('addedItemsList').insertAdjacentHTML('beforeend', tableRowHtml);

            // Reset modal fields
            itemSelect.selectedIndex = 0;
            quantityInput.value = '';
            adjustmentTypeSelect.selectedIndex = 0;
            reasonInput.value = '';

            // Increment the item index
            itemIndex++;

            // Close the modal
            $('#itemModal').modal('hide');

            // Add event listener to the remove button
            document.querySelectorAll('.removeItemButton').forEach(button => {
                button.addEventListener('click', function () {
                    const row = this.closest('tr');
                    const index = row.getAttribute('data-index');
                    row.remove();
                    document.querySelectorAll(`[name^="items[${index}]"]`).forEach(input => input.remove());
                });
            });
        });

        // Search functionality for item selection
        document.getElementById('modalItemSearch').addEventListener('input', function () {
            const searchQuery = this.value.trim().toLowerCase();
            const options = document.getElementById('modalItem').options;

            for (let i = 0; i < options.length; i++) {
                const option = options[i];
                const text = option.textContent.toLowerCase();

                if (text.includes(searchQuery)) {
                    option.style.display = '';
                } else {
                    option.style.display = 'none';
                }
            }
        });
    </script>